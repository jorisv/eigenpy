name: Conda-CI

on: [push,pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  eigenpy-conda:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }} ${{ matrix.build_type }} ${{ matrix.cxx_options }}
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_BASEDIR: "${GITHUB_WORKSPACE}"
      CCACHE_DIR: "${GITHUB_WORKSPACE}/.ccache"
      CCACHE_COMPRESS: true
      CCACHE_COMPRESSLEVEL: 6

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest","macos-14"]
        cxx_options: ['', '-mavx2']
        build_type: [Release, Debug]
        python-version: ["3.8", "3.12"]

        exclude:
          - build_type: Debug
            cxx_options: -mavx2
            os: macos-latest
          - build_type: Release
            cxx_options: -mavx2
            os: macos-latest
          - build_type: Debug
            cxx_options: -mavx2
            os: macos-14
          - build_type: Release
            cxx_options: -mavx2
            os: macos-14

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/cache@v3
      with:
        path: .ccache
        key: ccache-macos-linux-conda-${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.cxx_options }}-${{ matrix.python-version }}-${{ github.sha }}
        restore-keys: ccache-macos-linux-conda-${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.cxx_options }}-${{ matrix.python-version }}-

    - uses: prefix-dev/setup-pixi@v0.5.1
      with:
        pixi-version: v0.15.2
        cache: true

    - name: Build EigenPy
      shell: bash -el {0}
      run: |
        pixi run test

  check:
    if: always()
    name: check-macos-linux-conda

    needs:
    - eigenpy-conda

    runs-on: Ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
