name: CI - OSX/Linux via Conda

on:
  push:
    paths-ignore:
      - 'doc/**'
      - '.gitlab-ci.yml'
      - '.gitignore'
      - '*.md'
      - 'LICENSE'
      - 'colcon.pkg'
      - '.pre-commit-config.yaml'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - '.gitlab-ci.yml'
      - '.gitignore'
      - '*.md'
      - 'LICENSE'
      - 'colcon.pkg'
      - '.pre-commit-config.yaml'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  eigenpy-conda:
    name: ${{ matrix.os }} - Env ${{ matrix.environment }} ${{ matrix.build_type }} ${{ matrix.cxx_options }}
    runs-on: ${{ matrix.os }}
    env:
      CCACHE_BASEDIR: "${GITHUB_WORKSPACE}"
      CCACHE_DIR: "${GITHUB_WORKSPACE}/.ccache"
      CCACHE_COMPRESS: true
      CCACHE_COMPRESSLEVEL: 6

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, macos-14]
        environment: [py38-ci, py312-ci, accelerate-ci]
        build_type: [Release, Debug]
        cxx_options: ['', '-mavx2']

        exclude:
          - os: ubuntu-latest
            environment: accelerate-ci
          - os: macos-latest
            environment: accelerate-ci
          - os: macos-latest
            cxx_options: '-mavx2'
          - os: macos-14
            cxx_options: '-mavx2'

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: actions/cache@v4
      with:
        path: .ccache
        key: ccache-macos-linux-conda-${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.cxx_options }}-${{ matrix.environment }}-${{ github.sha }}
        restore-keys: ccache-macos-linux-conda-${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.cxx_options }}-${{ matrix.environment }}-

    - uses: prefix-dev/setup-pixi@v0.5.1
      with:
        pixi-version: v0.18.0
        cache: true
        environments: ${{ matrix.environment }}

    - name: Build EigenPy
      shell: bash -el {0}
      run: |
        pixi run -e ${{ matrix.environment }} \
          configure \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_CXX_FLAGS=${{ matrix.cxx_options }}
        pixi run -e ${{ matrix.environment }} build
        pixi run -e ${{ matrix.environment }} test

  check:
    if: always()
    name: check-macos-linux-conda

    needs:
    - eigenpy-conda

    runs-on: Ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
